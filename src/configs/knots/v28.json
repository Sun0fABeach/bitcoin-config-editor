[
	{
		"title": "General",
		"description": "Basic parameters regarding node operation",
		"configs": {
			"alertnotify": {
				"type": "text",
				"title": "Alert Notification",
				"description": "Execute command when an alert is raised (%s in cmd is replaced by message)",
				"shortDescription": "Execute command when an alert is raised (%s is replaced by message)"
			},
			"allowignoredconf": {
				"type": "checkbox",
				"title": "Allow Ignored Config File",
				"description": "For backwards compatibility, treat an unused bitcoin.conf file in the datadir as a warning, not an error",
				"shortDescription": "Treat unused bitcoin.conf file in the datadir as warning, not error",
				"defaultValue": "0"
			},
			"assumevalid": {
				"type": "text",
				"typeConstraints": {
					"hex": true,
					"minLength": 64,
					"maxLength": 64
				},
				"title": "Assume Valid Chain History",
				"description": "If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all)",
				"shortDescription": "If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification",
				"defaultValue": {
					"mainnet": "000000000000000000006e926737e6a349f7581525ad36e743dfe5f4bc3abbb7",
					"testnet3": "000000000000000465b1a66c9f386308e8c75acef9201f3f577811da09fc90ad",
					"testnet4": "000000005be348057db991fa5d89fe7c4695b667cfb311391a8db374b6f681fd",
					"signet": "0000014aad1d58dddcb964dd749b073374c6306e716b22f573a2efe68d414539"
				}
			},
			"blockfilterindex": {
				"type": "select",
				"title": "Block Filter Index",
				"description": "Maintain an index of compact filters by block. If set to 1, certain indexes are enabled (currently just basic)",
				"shortDescription": "Maintain an index of compact filters by block",
				"options": [
					{ "value": "0", "label": "Disable" },
					{ "value": "1", "label": "Enable" },
					{ "value": "basic", "label": "Basic" },
					{ "value": "v0", "label": "v0" }
				],
				"defaultValue": "0"
			},
			"blocknotify": {
				"type": "text",
				"title": "Block Notification",
				"description": "Execute command when the best block changes (%s in cmd is replaced by block hash)",
				"shortDescription": "Execute command when the best block changes (%s is replaced by block hash)"
			},
			"blockreconstructionextratxn": {
				"type": "number",
				"typeConstraints": {
					"min": 0,
					"wholeNumber": true
				},
				"title": "Block Reconstruction Transactions",
				"description": "Extra transactions to keep in memory for compact block reconstructions",
				"defaultValue": "100"
			},
			"blocksdir": {
				"type": "text",
				"title": "Block Data Storage Location",
				"description": "Specify directory to hold blocks subdirectory for *.dat files",
				"defaultValue": "value of <a href=\"#datadir\">datadir</a>"
			},
			"blocksonly": {
				"type": "checkbox",
				"title": "Blocks Only Mode",
				"description": "Whether to reject unconfirmed transactions from network peers. Disables automatic broadcast and rebroadcast of transactions, unless the source peer has the 'forcerelay' permission. RPC transactions are not affected",
				"shortDescription": "Whether to reject unconfirmed transactions from network peers",
				"defaultValue": "0"
			},
			"blocksxor": {
				"type": "checkbox",
				"title": "Block Data XOR",
				"description": "Whether an XOR-key applies to <a href=\"#blocksdir\">blocksdir</a> *.dat files. The created XOR-key will be zeros for an existing blocksdir or when 0 is set, and random for a freshly initialized blocksdir",
				"defaultValue": "1"
			},
			"coinstatsindex": {
				"type": "checkbox",
				"title": "Coin Stats Index",
				"description": "Maintain coinstats index used by the gettxoutsetinfo RPC",
				"defaultValue": "0"
			},
			"confrw": {
				"type": "text",
				"title": "Read/Write Config File",
				"description": "Specify path to read/write configuration file. Relative paths will be prefixed by the network-specific <a href=\"#datadir\">datadir</a> location",
				"shortDescription": "Specify read/write configuration file",
				"defaultValue": "bitcoin_rw.conf"
			},
			"corepolicy": {
				"type": "checkbox",
				"title": "Core Policy",
				"description": "Use Bitcoin Core policy defaults",
				"defaultValue": "0"
			},
			"daemon": {
				"type": "checkbox",
				"title": "Daemon Mode",
				"description": "Run in the background as a daemon and accept commands",
				"defaultValue": "0"
			},
			"daemonwait": {
				"type": "checkbox",
				"title": "Daemon Wait Mode",
				"description": "Wait for initialization to be finished before exiting. This implies <a href=\"#daemon\">daemon</a> mode",
				"shortDescription": "Wait for initialization to be finished before exiting",
				"defaultValue": "0"
			},
			"datadir": {
				"type": "text",
				"title": "Data Storage Location",
				"description": "Specify data directory"
			},
			"dbbatchsize": {
				"type": "number",
				"typeConstraints": {
					"min": 0
				},
				"title": "DB Batch Size",
				"description": "Maximum database write batch size in bytes",
				"defaultValue": "67108864"
			},
			"dbcache": {
				"type": "number",
				"typeConstraints": {
					"min": 4,
					"max": 1048576
				},
				"title": "DB Cache Size",
				"description": "Maximum database cache size in MiB. In addition, unused mempool memory is shared for this cache (see <a href=\"#maxmempool\">maxmempool</a>)",
				"shortDescription": "Maximum database cache size in MiB",
				"defaultValue": "450"
			},
			"dbfilesize": {
				"type": "number",
				"typeConstraints": {
					"min": 1,
					"max": 1024
				},
				"title": "DB File Size",
				"description": "Target size of files within databases, in MiB",
				"defaultValue": "64"
			},
			"debuglogfile": {
				"type": "text",
				"title": "Debug Log File",
				"description": "Specify location of debug log file. Relative paths will be prefixed by a net-specific <a href=\"#datadir\">datadir</a> location. Use <a href=\"#nodebuglogfile\">nodebuglogfile</a> to disable writing the log to a file",
				"shortDescription": "Specify location of debug log file",
				"defaultValue": "debug.log"
			},
			"loadblock": {
				"type": "multiText",
				"title": "Import Blocks From File",
				"description": "Import blocks from external blk000??.dat file on startup. This option can be set multiple times with different file values",
				"shortDescription": "Import blocks from external blk000??.dat file on startup"
			},
			"lowmem": {
				"type": "number",
				"typeConstraints": {
					"min": 0
				},
				"title": "Low Memory",
				"description": "If system available memory falls below <n> MiB, flush caches (0 to disable)",
				"shortDescription": "If system available memory falls below <n> MiB, flush caches",
				"defaultValue": "10"
			},
			"maxmempool": {
				"type": "number",
				"typeConstraints": {
					"min": 0
				},
				"title": "Max Mempool Size",
				"description": "Keep the transaction memory pool below <n> megabytes",
				"defaultValue": "300"
			},
			"maxorphantx": {
				"type": "number",
				"typeConstraints": {
					"min": 0,
					"wholeNumber": true
				},
				"title": "Max Orphan Transactions",
				"description": "Keep at most <n> unconnectable transactions in memory",
				"defaultValue": "100"
			},
			"mempoolexpiry": {
				"type": "number",
				"typeConstraints": {
					"min": 0
				},
				"title": "Mempool Expiration",
				"description": "Do not keep transactions in the mempool longer than <n> hours",
				"defaultValue": "336"
			},
			"minimumchainwork": {
				"type": "text",
				"typeConstraints": {
					"hex": true,
					"minLength": 64,
					"maxLength": 64
				},
				"title": "Minimum Chain Work",
				"description": "Minimum work assumed to exist on a valid chain in hex",
				"defaultValue": {
					"mainnet": "0000000000000000000000000000000000000000b08ea5865bede3101629fa0e",
					"testnet3": "000000000000000000000000000000000000000000000f209695166be8b61fa9",
					"testnet4": "00000000000000000000000000000000000000000000005faa15d02e6202f3ba",
					"signet": "0000000000000000000000000000000000000000000000000000025dbd66e58f"
				}
			},
			"nodebuglogfile": {
				"type": "checkbox",
				"title": "No Debug Log File",
				"description": "Disable writing the debug log to a file",
				"defaultValue": "0"
			},
			"nosettings": {
				"type": "checkbox",
				"title": "No Settings File",
				"description": "Disable writing the settings file",
				"defaultValue": "0"
			},
			"par": {
				"type": "number",
				"typeConstraints": {
					"max": 15
				},
				"title": "Script Verification Parallelization",
				"description": "Set the number of script verification threads (0 = automatic, up to 15, less than 0 = leave that many cores free)",
				"shortDescription": "Set the number of script verification threads",
				"defaultValue": "336"
			},
			"persistmempool": {
				"type": "checkbox",
				"title": "Persist Mempool",
				"description": "Whether to save the mempool on shutdown and load on restart",
				"defaultValue": "1"
			},
			"persistmempoolv1": {
				"type": "checkbox",
				"title": "Persist Mempool v1",
				"description": "Whether a mempool.dat file created by <a href=\"#persistmempool\">persistmempool</a> or the savemempool RPC will be written in the legacy format (version 1) or the current format (version 2). This temporary option will be removed in the future",
				"shortDescription": "Whether a mempool.dat file created by -persistmempool or the savemempool RPC will be written in the legacy (v1) or current (v2) format",
				"defaultValue": "0"
			},
			"pid": {
				"type": "text",
				"title": "PID File",
				"description": "Specify process ID file name. Relative paths will be prefixed by a net-specific <a href=\"#datadir\">datadir</a> location",
				"shortDescription": "Specify process ID file name",
				"defaultValue": "bitcoind.pid"
			},
			"prune": {
				"type": "number",
				"typeConstraints": {
					"min": 0,
					"invalidRange": [2, 550]
				},
				"title": "Prune Blocks",
				"description": "Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with <a href=\"#txindex\">txindex</a> and <a href=\"#coinstatsindex\">coinstatsindex</a>. WARNING: Reverting this setting requires re-downloading the entire blockchain. (0 = disable pruning blocks, 1 = allow manual pruning via RPC, greater or equal 550 = automatically prune blocks to stay under target size in MiB)",
				"shortDescription": "Enable pruning of old blocks",
				"defaultValue": "0"
			},
			"pruneduringinit": {
				"type": "number",
				"typeConstraints": {
					"min": -1,
					"invalidRange": [2, 550]
				},
				"title": "Prune Blocks During Init",
				"description": "Temporarily adjust the <a href=\"#prune\">prune</a> setting until initial sync completes. Ignored if pruning is disabled. (-1 = same value as <a href=\"#prune\">prune</a>)",
				"shortDescription": "Temporarily adjust the -prune setting until initial sync completes",
				"defaultValue": "-1"
			},
			"reindex": {
				"type": "select",
				"title": "Reindex",
				"description": "If enabled, wipe chain state and block index, and rebuild them from blk*.dat files on disk. Also wipe and rebuild other optional indexes that are active. If an assumeutxo snapshot was loaded, its chainstate will be wiped as well. The snapshot can then be reloaded via RPC. Setting this to auto automatically reindexes the block database if it is corrupted",
				"shortDescription": "Wipe chain state and block index, and rebuild them from blk*.dat files",
				"options": [
					{ "value": "0", "label": "Disable" },
					{ "value": "1", "label": "Enable" },
					{ "value": "auto", "label": "Auto" }
				],
				"defaultValue": "0"
			},
			"reindex-chainstate": {
				"type": "checkbox",
				"title": "Reindex Chainstate",
				"description": "If enabled, wipe chain state, and rebuild it from blk*.dat files on disk. If an assumeutxo snapshot was loaded, its chainstate will be wiped as well. The snapshot can then be reloaded via RPC",
				"shortDescription": "Wipe chain state and rebuild it from blk*.dat files",
				"defaultValue": "0"
			},
			"settings": {
				"type": "text",
				"title": "Settings File",
				"description": "Specify path to dynamic settings data file. Can be disabled with <a href=\"#nosettings\">nosettings</a>. File is written at runtime and not meant to be edited by users (use bitcoin.conf instead for custom settings). Relative paths will be prefixed by <a href=\"#datadir\">datadir</a> location",
				"shortDescription": "Specify path to dynamic settings data file",
				"defaultValue": "settings.json"
			},
			"shutdownnotify": {
				"type": "text",
				"title": "Shutdown Notification",
				"description": "Execute command immediately before beginning shutdown. The need for shutdown may be urgent, so be careful not to delay it long (if the command doesn't require interaction with the server, consider having it fork into the background)",
				"shortDescription": "Execute command immediately before beginning shutdown"
			},
			"softwareexpiry": {
				"type": "number",
				"typeConstraints": {
					"min": 0
				},
				"title": "Software Expiry",
				"description": "Stop working after this POSIX timestamp. (0 = disable)",
				"shortDescription": "Stop working after this POSIX timestamp",
				"defaultValue": "1825593420"
			},
			"startupnotify": {
				"type": "text",
				"title": "Startup Notification",
				"description": "Execute command on startup"
			},
			"txindex": {
				"type": "checkbox",
				"title": "Index Transactions",
				"description": "Maintain a full transaction index, used by the getrawtransaction rpc call",
				"defaultValue": "0"
			}
		}
	},
	{
		"title": "Chain Selection",
		"description": "Which network / blockchain to use",
		"configs": {}
	},
	{
		"title": "Networking",
		"description": "How your node interacts with other peers on the network",
		"configs": {
			"onlynet": {
				"type": "multiSelect",
				"title": "Only Use Specific Network",
				"description": "Make automatic outbound connections only to the selected network. Inbound and manual connections are not affected by this option. It can be specified multiple times to allow multiple networks",
				"shortDescription": "Make automatic outbound connections only to the selected network",
				"options": [
					{ "value": "ipv4", "label": "IPv4" },
					{ "value": "ipv6", "label": "IPv6" },
					{ "value": "onion", "label": "Tor" },
					{ "value": "i2p", "label": "I2P" },
					{ "value": "cjdns", "label": "cjdns" }
				]
			}
		}
	},
	{
		"title": "Mempool",
		"description": "What transactions your node will relay to peers",
		"configs": {
			"minrelaytxfee": {
				"type": "number",
				"typeConstraints": {
					"min": 0
				},
				"title": "Minimum Transaction Relay Fee",
				"description": "Fees (in BTC/kvB) smaller than this are considered zero fee for relaying, mining and transaction creation",
				"shortDescription": "Fees (in BTC/kvB) smaller than this are considered zero fee",
				"defaultValue": "0.00001"
			}
		}
	},
	{
		"title": "Mining",
		"description": "Attributes of blocks that can be mined by your node",
		"configs": {}
	},
	{
		"title": "RPC",
		"description": "Security and performance options for accessing your node's RPC interface",
		"configs": {}
	},
	{
		"title": "Wallet",
		"description": "Behavior of your node's wallet",
		"configs": {}
	},
	{
		"title": "ZeroMQ",
		"description": "Options for handling notifications emitted via ZeroMQ",
		"configs": {}
	},
	{
		"title": "Statistics",
		"description": "Options for collecting statistics",
		"configs": {}
	},
	{
		"title": "Debugging & Testing",
		"description": "Features that help developers",
		"configs": {
			"checkblocks": {
				"type": "number",
				"typeConstraints": {
					"min": 0,
					"wholeNumber": true
				},
				"title": "Check Blocks",
				"description": "How many blocks to check at startup (0 = all)",
				"defaultValue": 6
			},
			"checklevel": {
				"type": "select",
				"title": "Check Blocks Level",
				"description": "How thorough the block verification of <a href='#checkblocks'>checkblocks</a> is: level 0 reads the blocks from disk, level 1 verifies block validity, level 2 verifies undo data, level 3 checks disconnection of tip blocks, level 4 tries to reconnect the blocks, each level includes the checks of the previous levels",
				"options": [
					{ "value": "0", "label": "0" },
					{ "value": "1", "label": "1" },
					{ "value": "2", "label": "2" },
					{ "value": "3", "label": "3" },
					{ "value": "4", "label": "4" }
				],
				"defaultValue": "3"
			}
		}
	}
]
